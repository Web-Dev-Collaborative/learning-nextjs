import type { Subscription } from 'rxjs';
import React from 'react';
import { AssetRecord } from '../../inputs/files/ImageInput/types';
import { AssetDialogAction, AssetMenuAction } from './types';
interface AssetProps {
    asset?: AssetRecord;
    isSelected: boolean;
    onClick?: (...args: any[]) => any;
    onKeyPress?: (...args: any[]) => any;
    onDeleteFinished: (...args: any[]) => any;
}
interface State {
    isDeleting: boolean;
    showUsageDialog: boolean;
    deleteError: Error | null;
}
export default class Asset extends React.PureComponent<AssetProps, State> {
    state: State;
    delete$: Subscription;
    componentWillUnmount(): void;
    handleDeleteAsset: () => void;
    handleDialogClose: () => void;
    handleMenuAction: (action: AssetMenuAction) => void;
    handleDialogAction: (action: AssetDialogAction) => void;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=Asset.d.ts.map