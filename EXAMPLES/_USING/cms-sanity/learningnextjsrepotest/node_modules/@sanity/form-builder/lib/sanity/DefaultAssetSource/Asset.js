"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ui = require("@sanity/ui");

var _FullscreenSpinner = require("../../components/FullscreenSpinner");

var _versionedClient = require("../versionedClient");

var _Checkerboard = require("../../components/Checkerboard");

var _AssetUsageDialog = require("./AssetUsageDialog");

var _AssetMenu = require("./AssetMenu");

var _DeleteAssetErrorDialog = require("./DeleteAssetErrorDialog");

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

// Get pixel density of the current device
var DPI = typeof window === 'undefined' || !window.devicePixelRatio ? 1 : Math.round(window.devicePixelRatio);

var Image = _styledComponents.default.img(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: block;\n  object-fit: contain;\n"])));

var Container = (0, _styledComponents.default)(_Checkerboard.Checkerboard)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  position: relative;\n  z-index: 1;\n  padding-bottom: 100%;\n"])));

var Root = _styledComponents.default.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  position: relative;\n  display: inherit;\n"])));

var MenuContainer = _styledComponents.default.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 2;\n  display: none;\n  top: 3px;\n  right: 3px;\n\n  ", ":hover & {\n    display: block;\n  }\n"])), Root);

class Asset extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      isDeleting: false,
      showUsageDialog: false,
      deleteError: null
    });

    _defineProperty(this, "delete$", void 0);

    _defineProperty(this, "handleDeleteAsset", () => {
      var _this$props = this.props,
          onDeleteFinished = _this$props.onDeleteFinished,
          asset = _this$props.asset;
      this.setState({
        isDeleting: true
      });
      this.delete$ = _versionedClient.versionedClient.observable.delete(asset._id).subscribe({
        next: () => {
          this.setState({
            isDeleting: false
          });
          onDeleteFinished(asset._id);
        },
        error: err => {
          this.setState({
            isDeleting: false,
            deleteError: err
          }); // eslint-disable-next-line no-console

          console.error('Could not delete asset', err);
        }
      });
    });

    _defineProperty(this, "handleDialogClose", () => {
      this.setState({
        showUsageDialog: false,
        deleteError: null
      });
    });

    _defineProperty(this, "handleMenuAction", action => {
      if (action.type === 'delete') {
        this.handleDeleteAsset();
      }

      if (action.type === 'showUsage') {
        this.setState({
          showUsageDialog: true
        });
      }
    });

    _defineProperty(this, "handleDialogAction", action => {
      if (action.type === 'close') {
        this.handleDialogClose();
      }

      if (action.type === 'delete') {
        this.handleDeleteAsset();
      }
    });
  }

  componentWillUnmount() {
    if (this.delete$) {
      this.delete$.unsubscribe();
    }
  }

  render() {
    var _this$props2 = this.props,
        asset = _this$props2.asset,
        onClick = _this$props2.onClick,
        onKeyPress = _this$props2.onKeyPress,
        isSelected = _this$props2.isSelected;
    var _this$state = this.state,
        isDeleting = _this$state.isDeleting,
        showUsageDialog = _this$state.showUsageDialog,
        deleteError = _this$state.deleteError;
    var imgH = 200 * Math.max(1, DPI);
    return /*#__PURE__*/_react.default.createElement(Root, null, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      tone: "primary",
      selected: isSelected,
      tabIndex: 0,
      "data-id": asset._id,
      mode: "ghost",
      onKeyPress: onKeyPress,
      padding: 0,
      style: {
        padding: 2
      }
    }, /*#__PURE__*/_react.default.createElement(Container, null, /*#__PURE__*/_react.default.createElement(Image, {
      alt: asset.originalFileName,
      src: "".concat(asset.url, "?h=").concat(imgH, "&fit=max"),
      onClick: onClick,
      "data-id": asset._id
    }), isDeleting && /*#__PURE__*/_react.default.createElement(_FullscreenSpinner.FullscreenSpinner, null))), /*#__PURE__*/_react.default.createElement(MenuContainer, null, /*#__PURE__*/_react.default.createElement(_AssetMenu.AssetMenu, {
      isSelected: isSelected,
      onAction: this.handleMenuAction
    })), showUsageDialog && /*#__PURE__*/_react.default.createElement(_AssetUsageDialog.AssetUsageDialog, {
      asset: asset,
      onClose: this.handleDialogClose,
      onDelete: this.handleDeleteAsset
    }), deleteError && /*#__PURE__*/_react.default.createElement(_DeleteAssetErrorDialog.DeleteAssetErrorDialog, {
      asset: asset,
      onClose: this.handleDialogClose,
      error: deleteError
    }));
  }

}

exports.default = Asset;