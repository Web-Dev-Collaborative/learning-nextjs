"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentStatusBar = DocumentStatusBar;

var _react = _interopRequireDefault(require("react"));

var _reactHooks = require("@sanity/react-hooks");

var _resolver = _interopRequireDefault(require("part:@sanity/base/document-badges/resolver"));

var _documentHistory = require("../documentHistory");

var _documentStatusBarActions = require("./documentStatusBarActions");

var _documentSparkline = require("./documentSparkline");

var _documentStatusBar = _interopRequireDefault(require("./documentStatusBar.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function DocumentStatusBar(props) {
  var _historyController$re;

  var _useDocumentHistory = (0, _documentHistory.useDocumentHistory)(),
      historyController = _useDocumentHistory.historyController;

  var editState = (0, _reactHooks.useEditState)(props.id, props.type);
  var badges = editState ? (0, _resolver.default)(editState) : [];
  var showingRevision = historyController.onOlderRevision();
  var revision = ((_historyController$re = historyController.revTime) === null || _historyController$re === void 0 ? void 0 : _historyController$re.id) || '';
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _documentStatusBar.default.root
  }, /*#__PURE__*/_react.default.createElement(_documentSparkline.DocumentSparkline, {
    editState: editState,
    badges: badges,
    lastUpdated: props.lastUpdated
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: _documentStatusBar.default.actions
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _documentStatusBar.default.actionsWrapper
  }, showingRevision ? /*#__PURE__*/_react.default.createElement(_documentStatusBarActions.HistoryStatusBarActions, {
    id: props.id,
    type: props.type,
    revision: revision
  }) : /*#__PURE__*/_react.default.createElement(_documentStatusBarActions.DocumentStatusBarActions, {
    id: props.id,
    type: props.type
  }))));
}