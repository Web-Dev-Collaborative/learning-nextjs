"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentBadges = DocumentBadges;

var _react = _interopRequireDefault(require("react"));

var _utils = require("part:@sanity/base/actions/utils");

var _default = _interopRequireDefault(require("part:@sanity/components/badges/default"));

var _documentBadges = _interopRequireDefault(require("./documentBadges.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable @typescript-eslint/explicit-function-return-type */

/* eslint-disable react/no-multi-comp */

/* eslint-disable react/no-array-index-key */
function DocumentBadgesInner(_ref) {
  var states = _ref.states;
  // TODO: filter out higher up
  var customDocumentBadges = states.filter(badge => badge.label && !['Published', 'Draft', 'Live document'].includes(badge.label));
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _documentBadges.default.root
  }, customDocumentBadges.length > 0 && /*#__PURE__*/_react.default.createElement("div", {
    className: _documentBadges.default.customDocumentBadges
  }, customDocumentBadges.map((badge, index) => /*#__PURE__*/_react.default.createElement("div", {
    className: _documentBadges.default.documentBadge,
    key: String(index)
  }, /*#__PURE__*/_react.default.createElement(_default.default, {
    color: badge.color || 'default',
    title: badge.title
  }, badge.label)))));
}

function DocumentBadges(props) {
  return props.badges ? /*#__PURE__*/_react.default.createElement(_utils.RenderBadgeCollectionState, {
    component: DocumentBadgesInner,
    badges: props.badges,
    badgeProps: props.editState
  }) : null;
}