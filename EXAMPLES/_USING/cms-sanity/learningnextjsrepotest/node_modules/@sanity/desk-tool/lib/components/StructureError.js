"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = StructureError;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _generateHelpUrl = _interopRequireDefault(require("@sanity/generate-help-url"));

var _structure = require("@sanity/structure");

var _errorIcon = _interopRequireDefault(require("part:@sanity/base/error-icon"));

var _StructureError = _interopRequireDefault(require("./StructureError.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function formatStack(stack) {
  return stack // Prettify builder functions
  .replace(/\(\.\.\.\)\./g, '(...)\n  .') // Remove webpack cruft from function names
  .replace(/__WEBPACK_IMPORTED_MODULE_\d+_+/g, '') // Remove default export postfix from function names
  .replace(/___default\./g, '.') // Replace full host path, leave only path to JS-file
  .replace(new RegExp(" \\(https?:\\/\\/".concat(window.location.host), 'g'), ' (');
}

function StructureError(props) {
  var _props$error = props.error,
      path = _props$error.path,
      helpId = _props$error.helpId,
      message = _props$error.message,
      stack = _props$error.stack; // Serialize errors are well-formatted and should be readable, in these cases a stack trace is
  // usually not helpful. Build errors in dev (with HMR) usually also contains a bunch of garbage
  // instead of an actual error message, so make sure we show the message in these cases as well

  var showStack = !(props.error instanceof _structure.SerializeError) && !message.includes('Module build failed:');
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _StructureError.default.root
  }, /*#__PURE__*/_react.default.createElement("h2", {
    className: _StructureError.default.title
  }, "Encountered an error while reading structure"), /*#__PURE__*/_react.default.createElement("div", {
    className: _StructureError.default.body
  }, /*#__PURE__*/_react.default.createElement("h2", {
    className: _StructureError.default.path
  }, path && path.map((segment, i) => /*#__PURE__*/_react.default.createElement("span", {
    key: i,
    className: _StructureError.default.segment
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: _StructureError.default.pathSegmentProperty
  }, segment)))), /*#__PURE__*/_react.default.createElement("div", {
    className: _StructureError.default.problem
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _StructureError.default.problemSeverity
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: _StructureError.default.problemSeverityIcon
  }, /*#__PURE__*/_react.default.createElement(_errorIcon.default, null)), /*#__PURE__*/_react.default.createElement("span", {
    className: _StructureError.default.problemSeverityText
  }, "Error")), /*#__PURE__*/_react.default.createElement("div", {
    className: _StructureError.default.problemContent
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _StructureError.default.problemMessage
  }, showStack ? formatStack(stack) : message), helpId && /*#__PURE__*/_react.default.createElement("a", {
    className: _StructureError.default.problemLink,
    href: (0, _generateHelpUrl.default)(helpId),
    rel: "noopener noreferrer",
    target: "_blank"
  }, "View documentation")))));
}

StructureError.propTypes = {
  error: _propTypes.default.shape({
    message: _propTypes.default.string.isRequired,
    stack: _propTypes.default.string.isRequired,
    path: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])),
    helpId: _propTypes.default.string
  }).isRequired
};