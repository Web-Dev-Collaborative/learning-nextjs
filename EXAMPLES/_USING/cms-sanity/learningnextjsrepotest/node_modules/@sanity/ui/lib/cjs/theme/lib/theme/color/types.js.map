{
  "version": 3,
  "sources": ["../../../../../../src/theme/lib/theme/color/types.ts"],
  "sourcesContent": ["import {ThemeColorSyntax} from './syntax'\n\n/**\n * @public\n */\nexport type ThemeColorSchemeKey = 'dark' | 'light'\n\n/**\n * @public\n */\nexport type ThemeColorName =\n  | 'default'\n  | 'transparent'\n  | 'primary'\n  | 'positive'\n  | 'caution'\n  | 'critical'\n\n/**\n * @public\n */\nexport type ThemeColorButtonModeKey = 'default' | 'ghost' | 'bleed'\n\n/**\n * @public\n */\nexport type ThemeColorToneKey =\n  | 'default'\n  | 'transparent'\n  | 'primary'\n  | 'positive'\n  | 'caution'\n  | 'critical'\n\n/**\n * @public\n */\nexport type ThemeColorSpotKey =\n  | 'gray'\n  | 'blue'\n  | 'purple'\n  | 'magenta'\n  | 'red'\n  | 'orange'\n  | 'yellow'\n  | 'green'\n  | 'cyan'\n\n/**\n * @public\n */\nexport interface ThemeColorButtonState {\n  bg: string\n  fg: string\n  border: string\n}\n\n/**\n * @public\n */\nexport interface ThemeColorButtonStates {\n  enabled: ThemeColorButtonState\n  hovered: ThemeColorButtonState\n  pressed: ThemeColorButtonState\n  selected: ThemeColorButtonState\n  disabled: ThemeColorButtonState\n}\n\n/**\n * @public\n */\nexport interface ThemeColorCardState {\n  bg: string\n  fg: string\n  border: string\n  muted: {\n    fg: string\n  }\n  accent: {\n    fg: string\n  }\n  link: {\n    fg: string\n  }\n  code: {\n    bg: string\n    fg: string\n  }\n  skeleton?: {\n    from: string\n    to: string\n  }\n}\n\n/**\n * @public\n */\nexport interface ThemeColorCard {\n  enabled: ThemeColorCardState\n  hovered: ThemeColorCardState\n  pressed: ThemeColorCardState\n  selected: ThemeColorCardState\n  disabled: ThemeColorCardState\n}\n\n/**\n * @public\n */\nexport interface ThemeColorBase {\n  bg: string\n  fg: string\n  border: string\n  focusRing: string\n  shadow: {\n    outline: string\n    umbra: string\n    penumbra: string\n    ambient: string\n  }\n  skeleton?: {\n    from: string\n    to: string\n  }\n}\n\n/**\n * @public\n */\nexport interface ThemeColorGenericState {\n  bg: string\n  border: string\n  fg: string\n}\n\n/**\n * @public\n */\nexport interface ThemeColorSolidTone {\n  enabled: ThemeColorGenericState\n  disabled: ThemeColorGenericState\n  hovered: ThemeColorGenericState\n  pressed: ThemeColorGenericState\n  selected: ThemeColorGenericState\n}\n\n/**\n * @public\n */\nexport interface ThemeColorSolid {\n  default: ThemeColorSolidTone\n  transparent: ThemeColorSolidTone\n  primary: ThemeColorSolidTone\n  positive: ThemeColorSolidTone\n  caution: ThemeColorSolidTone\n  critical: ThemeColorSolidTone\n}\n\n/**\n * @public\n */\nexport interface ThemeColorMutedTone {\n  enabled: ThemeColorGenericState\n  disabled: ThemeColorGenericState\n  hovered: ThemeColorGenericState\n  pressed: ThemeColorGenericState\n  selected: ThemeColorGenericState\n}\n\n/**\n * @public\n */\nexport interface ThemeColorMuted {\n  default: ThemeColorMutedTone\n  transparent: ThemeColorMutedTone\n  primary: ThemeColorMutedTone\n  positive: ThemeColorMutedTone\n  caution: ThemeColorMutedTone\n  critical: ThemeColorMutedTone\n}\n\n/**\n * @public\n */\nexport interface ThemeColorButtonTones {\n  default: ThemeColorButtonStates\n  primary: ThemeColorButtonStates\n  positive: ThemeColorButtonStates\n  caution: ThemeColorButtonStates\n  critical: ThemeColorButtonStates\n}\n\n/**\n * @public\n */\nexport interface ThemeColorButton {\n  default: ThemeColorButtonTones\n  ghost: ThemeColorButtonTones\n  bleed: ThemeColorButtonTones\n}\n\n/**\n * @public\n */\nexport interface ThemeColorInputState {\n  bg: string\n  fg: string\n  border: string\n  placeholder: string\n}\n\n/**\n * @public\n */\nexport interface ThemeColorInputStates {\n  enabled: ThemeColorInputState\n  disabled: ThemeColorInputState\n  hovered: ThemeColorInputState\n  readOnly: ThemeColorInputState\n}\n\n/**\n * @public\n */\nexport interface ThemeColorInput {\n  default: ThemeColorInputStates\n  invalid: ThemeColorInputStates\n}\n\n/**\n * @public\n */\nexport interface ThemeColorSpot {\n  gray: string\n  blue: string\n  purple: string\n  magenta: string\n  red: string\n  orange: string\n  yellow: string\n  green: string\n  cyan: string\n}\n\n/**\n * @public\n */\nexport interface ThemeColor {\n  dark: boolean\n  base: ThemeColorBase\n  button: ThemeColorButton\n  card: ThemeColorCard\n  input: ThemeColorInput\n  spot: ThemeColorSpot\n  syntax: ThemeColorSyntax\n  solid: ThemeColorSolid\n  muted: ThemeColorMuted\n}\n\n/**\n * @public\n */\nexport interface ThemeColorScheme {\n  default: ThemeColor\n  transparent: ThemeColor\n  primary: ThemeColor\n  positive: ThemeColor\n  caution: ThemeColor\n  critical: ThemeColor\n}\n\n/**\n * @public\n */\nexport interface ThemeColorSchemes {\n  dark: ThemeColorScheme\n  light: ThemeColorScheme\n}\n\n/**\n * @public\n */\nexport interface ThemeColorBuilderOpts {\n  base: (opts: {dark: boolean; name: ThemeColorName}) => ThemeColorBase\n  solid: (opts: {\n    base: ThemeColorBase\n    dark: boolean\n    tone: ThemeColorToneKey\n    name: ThemeColorName\n    state: 'enabled' | 'disabled' | 'hovered' | 'pressed' | 'selected'\n  }) => ThemeColorGenericState\n  muted: (opts: {\n    base: ThemeColorBase\n    dark: boolean\n    tone: ThemeColorToneKey\n    name: ThemeColorName\n    state: 'enabled' | 'disabled' | 'hovered' | 'pressed' | 'selected'\n  }) => ThemeColorGenericState\n  card: (opts: {\n    base: ThemeColorBase\n    dark: boolean\n    muted: ThemeColorMutedTone\n    name: ThemeColorName\n    solid: ThemeColorSolidTone\n    state: 'enabled' | 'disabled' | 'hovered' | 'pressed' | 'selected'\n  }) => ThemeColorCardState\n  button: (opts: {\n    dark: boolean\n    mode: ThemeColorButtonModeKey\n    base: ThemeColorBase\n    solid: ThemeColorSolidTone\n    muted: ThemeColorMutedTone\n  }) => ThemeColorButtonStates\n  input: (opts: {\n    base: ThemeColorBase\n    solid: ThemeColorSolidTone\n    muted: ThemeColorMutedTone\n    dark: boolean\n    mode: 'default' | 'invalid'\n    state: 'enabled' | 'disabled' | 'hovered' | 'readOnly'\n  }) => ThemeColorInputState\n  syntax: (opts: {base: ThemeColorBase; dark: boolean}) => ThemeColorSyntax\n  spot: (opts: {base: ThemeColorBase; dark: boolean; key: ThemeColorSpotKey}) => string\n}\n"],
  "mappings": ";;AAAA;",
  "names": []
}
