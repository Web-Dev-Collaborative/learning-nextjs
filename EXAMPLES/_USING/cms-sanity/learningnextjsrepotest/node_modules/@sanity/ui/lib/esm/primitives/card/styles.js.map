{
  "version": 3,
  "sources": ["../../../../src/primitives/card/styles.ts"],
  "sourcesContent": ["import {css, FlattenSimpleInterpolation} from 'styled-components'\nimport {ThemeProps} from '../../styles'\nimport {ThemeColorBase, ThemeColorCardState} from '../../theme'\nimport {CardStyleProps} from './types'\n\nexport function cardStyle(\n  props: CardStyleProps & ThemeProps\n): Array<FlattenSimpleInterpolation | (() => FlattenSimpleInterpolation)> {\n  return [cardBaseStyle, cardColorStyle(props)]\n}\n\nexport function cardBaseStyle(): FlattenSimpleInterpolation {\n  return css`\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n\n    /* &:is(pre) */\n    &[data-as='pre'] {\n      font: inherit;\n    }\n  `\n}\n\nfunction vars(base: ThemeColorBase, color: ThemeColorCardState) {\n  // Custom properties that may be used by other atoms\n  return css`\n    --card-bg-color: ${color.bg};\n    --card-fg-color: ${color.fg};\n    --card-focus-ring-color: ${base.focusRing};\n    --card-border-color: ${color.border};\n    --card-muted-fg-color: ${color.muted.fg};\n    --card-accent-fg-color: ${color.accent.fg};\n    --card-link-fg-color: ${color.link.fg};\n    --card-code-bg-color: ${color.code.bg};\n    --card-code-fg-color: ${color.code.fg};\n\n    /* @todo: deprecate */\n    --card-link-color: ${color.link.fg};\n    --card-hairline-soft-color: ${color.border};\n    --card-hairline-hard-color: ${color.border};\n\n    /* @todo: rename to \"--base-\"? */\n    --card-shadow-outline-color: ${base.shadow.outline};\n    --card-shadow-umbra-color: ${base.shadow.umbra};\n    --card-shadow-penumbra-color: ${base.shadow.penumbra};\n    --card-shadow-ambient-color: ${base.shadow.ambient};\n\n    /* Skeleton */\n    --card-skeleton-color-from: ${color.skeleton?.from};\n    --card-skeleton-color-to: ${color.skeleton?.to};\n  `\n}\n\nexport function cardColorStyle(props: CardStyleProps & ThemeProps): FlattenSimpleInterpolation {\n  const {theme} = props\n  const {base, card} = theme.sanity.color\n\n  return css`\n    ${vars(base, card.enabled)}\n\n    background-color: var(--card-bg-color);\n    color: var(--card-fg-color);\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      &:disabled {\n        ${vars(base, card.disabled)}\n      }\n\n      &[data-selected] {\n        ${vars(base, card.pressed)}\n      }\n\n      &:not(:disabled) {\n        @media (hover: hover) {\n          &:hover {\n            ${vars(base, card.hovered)}\n          }\n\n          &:active {\n            ${vars(base, card.pressed)}\n          }\n        }\n\n        &:focus {\n          ${vars(base, card.selected)}\n        }\n\n        &[aria-pressed='true'],\n        [aria-selected='true'] > & {\n          ${vars(base, card.selected)}\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      &[data-disabled] {\n        ${vars(base, card.disabled)}\n      }\n\n      &[data-selected] {\n        ${vars(base, card.pressed)}\n      }\n\n      &:not([data-disabled]) {\n        @media (hover: hover) {\n          outline: none;\n\n          &:hover {\n            ${vars(base, card.hovered)}\n          }\n\n          &:active {\n            ${vars(base, card.pressed)}\n          }\n        }\n\n        &:focus {\n          ${vars(base, card.selected)}\n        }\n\n        [aria-selected='true'] > & {\n          ${vars(base, card.selected)}\n        }\n      }\n    }\n\n    ${theme.sanity.styles?.card?.root}\n  `\n}\n"],
  "mappings": "AAAA;AAKO,mBACL,OACwE;AACxE,SAAO,CAAC,eAAe,eAAe;AAAA;AAGjC,yBAAqD;AAC1D,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBT,cAAc,MAAsB,OAA4B;AAnChE;AAqCE,SAAO;AAAA,uBACc,MAAM;AAAA,uBACN,MAAM;AAAA,+BACE,KAAK;AAAA,2BACT,MAAM;AAAA,6BACJ,MAAM,MAAM;AAAA,8BACX,MAAM,OAAO;AAAA,4BACf,MAAM,KAAK;AAAA,4BACX,MAAM,KAAK;AAAA,4BACX,MAAM,KAAK;AAAA;AAAA;AAAA,yBAGd,MAAM,KAAK;AAAA,kCACF,MAAM;AAAA,kCACN,MAAM;AAAA;AAAA;AAAA,mCAGL,KAAK,OAAO;AAAA,iCACd,KAAK,OAAO;AAAA,oCACT,KAAK,OAAO;AAAA,mCACb,KAAK,OAAO;AAAA;AAAA;AAAA,kCAGb,YAAM,aAAN,mBAAgB;AAAA,gCAClB,YAAM,aAAN,mBAAgB;AAAA;AAAA;AAIzC,wBAAwB,OAAgE;AAjE/F;AAkEE,QAAM,EAAC,UAAS;AAChB,QAAM,EAAC,MAAM,SAAQ,MAAM,OAAO;AAElC,SAAO;AAAA,MACH,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQZ,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,UAIhB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAMZ,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,cAIhB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,YAKlB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,YAKhB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQlB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,UAIhB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAQZ,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,cAIhB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,YAKlB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,YAIhB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,MAKtB,kBAAM,OAAO,WAAb,mBAAqB,SAArB,mBAA2B;AAAA;AAAA;",
  "names": []
}
