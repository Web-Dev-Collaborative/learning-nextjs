{
  "version": 3,
  "sources": ["../../../../src/components/tree/treeItem.tsx"],
  "sourcesContent": ["import {useId} from '@reach/auto-id'\nimport {ToggleArrowRightIcon} from '@sanity/icons'\nimport React, {createElement, useCallback, useEffect, useMemo, useRef} from 'react'\nimport styled, {css} from 'styled-components'\nimport {Box, Flex, Text} from '../../primitives'\nimport {rem} from '../../styles'\nimport {Theme, ThemeFontWeightKey} from '../../theme'\nimport {TreeContext} from './treeContext'\nimport {TreeGroup} from './treeGroup'\nimport {useTree} from './useTree'\n\n/**\n * @beta\n */\nexport interface TreeItemProps {\n  expanded?: boolean\n  fontSize?: number | number[]\n  icon?: React.ComponentType\n  padding?: number | number[]\n  space?: number | number[]\n  text?: React.ReactNode\n  weight?: ThemeFontWeightKey\n}\n\nconst Root = styled.li((props: {theme: Theme}) => {\n  const {theme} = props\n  const {card, muted} = theme.sanity.color\n\n  return css`\n    --treeitem-bg-color: ${card.enabled.bg};\n    --card-fg-color: ${card.enabled.fg};\n\n    &[data-selected] {\n      --treeitem-bg-color: ${card.pressed.bg};\n      --card-fg-color: ${card.pressed.fg};\n    }\n\n    &[role='none'] > [role='treeitem'] {\n      outline: none;\n      cursor: default;\n      background-color: var(--treeitem-bg-color);\n      color: var(--treeitem-fg-color);\n      border-radius: 3px;\n\n      &:not(:focus):hover {\n        --treeitem-bg-color: ${muted.default.hovered.bg};\n        --card-fg-color: ${muted.default.hovered.fg};\n      }\n\n      &:focus {\n        --treeitem-bg-color: ${card.selected.bg};\n        --card-fg-color: ${card.selected.fg};\n        position: relative;\n      }\n    }\n\n    &[role='treeitem'] {\n      outline: none;\n\n      & > div {\n        cursor: default;\n        background-color: var(--treeitem-bg-color);\n        color: var(--card-fg-color);\n        border-radius: 3px;\n      }\n\n      &:not(:focus) > div:hover {\n        --treeitem-bg-color: ${muted.default.hovered.bg};\n        --card-fg-color: ${muted.default.hovered.fg};\n      }\n\n      &:focus > div {\n        --treeitem-bg-color: ${card.selected.bg};\n        --card-fg-color: ${card.selected.fg};\n        position: relative;\n      }\n    }\n  `\n})\n\nconst TreeItemBox = styled(Box)<{$level: number}>((props: {$level: number; theme: Theme}) => {\n  const {$level, theme} = props\n  const {space} = theme.sanity\n\n  return css`\n    padding-left: ${rem(space[2] * $level)};\n\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `\n})\n\nconst ToggleArrowText = styled(Text)`\n  & > svg {\n    transition: transform 100ms;\n  }\n`\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport function TreeItem(\n  props: TreeItemProps & Omit<React.HTMLProps<HTMLLIElement>, 'as' | 'ref' | 'role'>\n): React.ReactElement {\n  const {\n    children,\n    expanded: expandedProp = false,\n    fontSize,\n    href,\n    icon,\n    id: idProp,\n    muted,\n    onClick,\n    padding = 3,\n    selected = false,\n    space = 2,\n    text,\n    weight,\n    ...restProps\n  } = props\n  const rootRef = useRef<HTMLLIElement | null>(null)\n  const treeitemRef = useRef<HTMLAnchorElement | null>(null)\n  const tree = useTree()\n  const {path, registerItem, setExpanded, setFocusedElement} = tree\n  const id = useId(idProp) || idProp\n  const itemPath = useMemo(() => path.concat([id || '']), [id, path])\n  const itemKey = itemPath.join('/')\n  const itemState = tree.state[itemKey]\n  const focused = tree.focusedElement === rootRef.current\n  const expanded = itemState?.expanded === undefined ? expandedProp : itemState?.expanded || false\n  const tabIndex = tree.focusedElement && tree.focusedElement === rootRef.current ? 0 : -1\n  const contextValue = useMemo(\n    () => ({...tree, level: tree.level + 1, path: itemPath}),\n    [itemPath, tree]\n  )\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLLIElement>) => {\n      if (onClick) onClick(event)\n\n      const target = event.target\n\n      if (\n        target instanceof HTMLElement &&\n        (target.getAttribute('data-ui') === 'TreeItem__box' ||\n          target.closest('[data-ui=\"TreeItem__box\"]'))\n      ) {\n        event.stopPropagation()\n        setExpanded(itemKey, !expanded)\n        setFocusedElement(rootRef.current)\n      }\n    },\n    [expanded, itemKey, onClick, setExpanded, setFocusedElement]\n  )\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      if (focused && event.key === 'Enter') {\n        const el = treeitemRef.current || rootRef.current\n\n        el?.click()\n      }\n    },\n    [focused]\n  )\n\n  useEffect(() => {\n    if (!rootRef.current) return\n\n    return registerItem(rootRef.current, itemPath.join('/'), expanded, selected)\n  }, [expanded, itemPath, registerItem, selected])\n\n  const content = (\n    <Flex padding={padding}>\n      <Box\n        marginRight={space}\n        style={{visibility: icon || children ? 'visible' : 'hidden', pointerEvents: 'none'}}\n      >\n        {icon && (\n          <Text muted={muted} size={fontSize} weight={weight}>\n            {createElement(icon)}\n          </Text>\n        )}\n        {!icon && (\n          <ToggleArrowText muted={muted} size={fontSize} weight={weight}>\n            <ToggleArrowRightIcon style={{transform: expanded ? 'rotate(90deg)' : undefined}} />\n          </ToggleArrowText>\n        )}\n      </Box>\n      <Box flex={1}>\n        <Text muted={muted} size={fontSize} textOverflow=\"ellipsis\" weight={weight}>\n          {text}\n        </Text>\n      </Box>\n    </Flex>\n  )\n\n  if (href) {\n    return (\n      <Root\n        data-selected={selected ? '' : undefined}\n        data-tree-id={id}\n        data-tree-key={itemKey}\n        data-ui=\"TreeItem\"\n        {...restProps}\n        onClick={handleClick}\n        ref={rootRef}\n        role=\"none\"\n      >\n        <TreeItemBox\n          $level={tree.level}\n          aria-expanded={expanded}\n          data-ui=\"TreeItem__box\"\n          forwardedAs=\"a\"\n          href={href}\n          ref={treeitemRef}\n          role=\"treeitem\"\n          tabIndex={tabIndex}\n        >\n          {content}\n        </TreeItemBox>\n\n        <TreeContext.Provider value={contextValue}>\n          {children && <TreeGroup hidden={!expanded}>{children}</TreeGroup>}\n        </TreeContext.Provider>\n      </Root>\n    )\n  }\n\n  return (\n    <Root\n      data-selected={selected ? '' : undefined}\n      data-ui=\"TreeItem\"\n      data-tree-id={id}\n      data-tree-key={itemKey}\n      {...restProps}\n      aria-expanded={expanded}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={rootRef}\n      role=\"treeitem\"\n      tabIndex={tabIndex}\n    >\n      <TreeItemBox $level={tree.level} data-ui=\"TreeItem__box\">\n        {content}\n      </TreeItemBox>\n\n      <TreeContext.Provider value={contextValue}>\n        {children && <TreeGroup expanded={expanded}>{children}</TreeGroup>}\n      </TreeContext.Provider>\n    </Root>\n  )\n}\n"],
  "mappings": "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",
  "names": []
}
