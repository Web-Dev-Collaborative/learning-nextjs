import React from 'react';
import Link from './Link';
import { RouterProviderContext } from './types';
import internalRouterContextTypeCheck from './internalRouterContextTypeCheck';
declare type Props = {
    state?: Record<string, any>;
    toIndex?: boolean;
};
export default class StateLink extends React.PureComponent<Props & React.HTMLProps<HTMLAnchorElement>> {
    context: RouterProviderContext | null;
    _element: Link | null;
    static defaultProps: {
        replace: boolean;
        toIndex: boolean;
    };
    static contextTypes: {
        __internalRouter: typeof internalRouterContextTypeCheck;
    };
    resolveUrl(): string;
    resolvePathFromState(state: Record<string, any>): string;
    focus(): void;
    setElement: (element: Link | null) => void;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=StateLink.d.ts.map