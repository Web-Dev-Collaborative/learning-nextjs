"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.diffMatchPatch = exports.insert = exports.setIfMissing = exports.unset = exports.set = exports.PatchEvent = void 0;
const lodash_1 = require("lodash");
const patches_1 = require("./patches");
Object.defineProperty(exports, "set", { enumerable: true, get: function () { return patches_1.set; } });
Object.defineProperty(exports, "unset", { enumerable: true, get: function () { return patches_1.unset; } });
Object.defineProperty(exports, "setIfMissing", { enumerable: true, get: function () { return patches_1.setIfMissing; } });
Object.defineProperty(exports, "insert", { enumerable: true, get: function () { return patches_1.insert; } });
Object.defineProperty(exports, "diffMatchPatch", { enumerable: true, get: function () { return patches_1.diffMatchPatch; } });
class PatchEvent {
    constructor(patches) {
        this.patches = patches;
    }
    static from(...patches) {
        return new PatchEvent(lodash_1.flatten(patches));
    }
    prepend(...patches) {
        return PatchEvent.from([...lodash_1.flatten(patches), ...this.patches]);
    }
    append(...patches) {
        return PatchEvent.from([...this.patches, ...lodash_1.flatten(patches)]);
    }
    prefixAll(segment) {
        return PatchEvent.from(this.patches.map(patch => patches_1.prefixPath(patch, segment)));
    }
}
exports.default = PatchEvent;
exports.PatchEvent = PatchEvent;
//# sourceMappingURL=PatchEvent.js.map