import { Editor, MoveNodeOperation, InsertTextOperation, RemoveTextOperation, SetNodeOperation, InsertNodeOperation, SplitNodeOperation, RemoveNodeOperation, MergeNodeOperation } from 'slate';
import { PortableTextFeatures, PortableTextBlock } from '../types/portableText';
import { Patch } from '../types/patch';
export declare function createOperationToPatches(portableTextFeatures: PortableTextFeatures): {
    insertNodePatch: (editor: Editor, operation: InsertNodeOperation, beforeValue: PortableTextBlock[]) => (import("../types/patch").SetIfMissingPatch | import("../types/patch").InsertPatch)[];
    insertTextPatch: (editor: Editor, operation: InsertTextOperation, beforeValue: PortableTextBlock[]) => import("../types/patch").DiffMatchPatch[];
    mergeNodePatch: (editor: Editor, operation: MergeNodeOperation, beforeValue: PortableTextBlock[]) => Patch[];
    moveNodePatch: (editor: Editor, operation: MoveNodeOperation, beforeValue: PortableTextBlock[]) => Patch[];
    removeNodePatch: (_: Editor, operation: RemoveNodeOperation, beforeValue: PortableTextBlock[]) => import("../types/patch").UnsetPatch[];
    removeTextPatch: (editor: Editor, operation: RemoveTextOperation, beforeValue: PortableTextBlock[]) => import("../types/patch").DiffMatchPatch[];
    setNodePatch: (editor: Editor, operation: SetNodeOperation) => Patch[];
    splitNodePatch: (editor: Editor, operation: SplitNodeOperation, beforeValue: PortableTextBlock[]) => Patch[];
};
//# sourceMappingURL=operationToPatches.d.ts.map